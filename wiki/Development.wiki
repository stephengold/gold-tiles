== Builds ==

There are two builds of the gold-tiles application:

 * gold-tile-Win32 - The main product, targeting the Microsoft Windows(tm) platform.

This build implements a graphical user interface (GUI) which assumes the presence of a mouse or other pointing device.  The graphics are based on GDI.  The _WINDOWS and _GUI preprocessor macros are defined.

 * gold-tile-console - implements a console user interface.

This is barely playable and used mainly for debug.  It might 
also be of interest to users wishing to play remotely (over 
telnet/rsh) or users lacking a pointing device.  The _CONSOLE preprocessor macro is defined.

== Coding standards ==

=== Source files ===

Source files needed only for GUI builds belong in src/gui.

Every header file should use #ifndef to prevent multiple inclusions.

For every class Foo there should ideally be a header file "foo.hpp" and a code file "foo.cpp".

Project-wide definitions belong in "project.hpp"

=== Identifiers ===

 * attributes - mMixedCasePrefixedByLowercaseM (this->mWidth)
 * auto variables - all_lowercase_with_underscores (int all_done;)
 * classes - MixedCaseStartingWithUppercase (class MenuItem)
 * enum values - use ALL_UPPER_CASE_WITH_UNDERSCORES (COLOR_BLACK)
 * formal parameters - mixedCaseStartingWithLowercase  (bool goFlag)
 * global variables - gMixedCasePrefixedByLowercaseG (gData)
 * methods - MixedCaseStartingWithUppercase (this->HideAll())
 * preproc macros - use ALL_UPPER_CASE_WITH_UNDERSCORES (ASSERT(e))
 * types - use MixedCaseSuffixedWithType (typedef int IdType;)

See [http://www.possibility.com/Cpp/CppCodingStandard.html] for rationale.

=== Indentation ===

 * Use Unix-style indentation when the curly brace fits on the same line with the preceding keyword.